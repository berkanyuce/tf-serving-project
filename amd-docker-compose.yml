version: '3.8'

services:
  tf_serving:
    image: tensorflow/serving:latest
    container_name: tf_serving_container
    ports:
      - "8501:8501"
    volumes:
      - ./fastapi/models:/models
    command: "--model_config_file=/models/models.config"
    networks:
      - my_network
  
  fastapi:
    build:
      context: ./devops/docker/python
      dockerfile: Dockerfile
    container_name: fastapi_container
    ports:
      - "8000:8000"
    depends_on:
      - tf_serving
      - postgres
    volumes:
      - ./fastapi:/app
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000
    networks:
      - my_network
  
  frontend:
    build:
      context: ./frontend
      dockerfile: ../devops/docker/node/Dockerfile
    container_name: react_frontend
    ports:
      - "3000:3000"
    depends_on:
      - fastapi
    volumes:
      - ./frontend:/app
    command: npm start
    networks:
      - my_network

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: tf_serving
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  pg-admin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    ports:
      - "8082:80" 
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - my_network

  spring_backend:
    build:
      context: . 
      dockerfile: devops/docker/backend/Dockerfile
    container_name: spring_backend
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - my_network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/tf_serving
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

volumes:
  postgres_data:
  
networks:
  my_network:
    name: tf_serving_network
