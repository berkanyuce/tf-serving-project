{"ast":null,"code":"var _jsxFileName = \"/Users/berkanyuce/Desktop/Desktop/Workintech/Kis\\u0327isel Projeler/tf-serving-project/frontend/src/components/ResultPredictForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n// Utility function to generate a random 32x32 matrix\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateRandomMatrix = () => {\n  const matrix = [];\n  for (let i = 0; i < 32; i++) {\n    const row = [];\n    for (let j = 0; j < 32; j++) {\n      row.push(Math.random()); // Random value between 0 and 1\n    }\n    matrix.push(row);\n  }\n  return matrix;\n};\nconst ResultPredictForm = () => {\n  _s();\n  const [matrixData, setMatrixData] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const handleGenerateMatrix = () => {\n    const randomMatrix = generateRandomMatrix();\n    console.log(\"Generated matrix:\", randomMatrix); // Debugging\n    setMatrixData(randomMatrix);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!matrixData) {\n      setError(\"No matrix data available\");\n      return;\n    }\n    try {\n      const result = await axios.post('http://localhost:8000/predict/result_model', {\n        conv2d_input: matrixData\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        timeout: 5000\n      });\n      console.log(\"Response data:\", result.data);\n      if (result.data && result.data.predicted_class && result.data.probabilities) {\n        const predictions = result.data.probabilities;\n        const predictedClass = result.data.predicted_class;\n        setResponse({\n          predictedClass,\n          probabilities: predictions\n        });\n      } else {\n        console.log(\"Predictions data is not available.\");\n        setError(\"Prediction data is not available.\");\n      }\n    } catch (error) {\n      console.log(\"Error details:\", error);\n      setError(error.response ? error.response.data : 'An error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Generate Random Matrix for Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleGenerateMatrix,\n        children: \"Generate Random Matrix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Predicted Class: \", response.predictedClass]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Probabilities: \", JSON.stringify(response.probabilities)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", JSON.stringify(error)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultPredictForm, \"Rskt38ysrG8BWpxXtLNMtRVan2Y=\");\n_c = ResultPredictForm;\nexport default ResultPredictForm;\nvar _c;\n$RefreshReg$(_c, \"ResultPredictForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","generateRandomMatrix","matrix","i","row","j","push","Math","random","ResultPredictForm","_s","matrixData","setMatrixData","response","setResponse","error","setError","handleGenerateMatrix","randomMatrix","console","log","handleSubmit","event","preventDefault","result","post","conv2d_input","headers","timeout","data","predicted_class","probabilities","predictions","predictedClass","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/berkanyuce/Desktop/Desktop/Workintech/KisÌ§isel Projeler/tf-serving-project/frontend/src/components/ResultPredictForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\n// Utility function to generate a random 32x32 matrix\nconst generateRandomMatrix = () => {\n  const matrix = [];\n  for (let i = 0; i < 32; i++) {\n    const row = [];\n    for (let j = 0; j < 32; j++) {\n      row.push(Math.random()); // Random value between 0 and 1\n    }\n    matrix.push(row);\n  }\n  return matrix;\n};\n\nconst ResultPredictForm = () => {\n  const [matrixData, setMatrixData] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleGenerateMatrix = () => {\n    const randomMatrix = generateRandomMatrix();\n    console.log(\"Generated matrix:\", randomMatrix); // Debugging\n    setMatrixData(randomMatrix);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!matrixData) {\n      setError(\"No matrix data available\");\n      return;\n    }\n    try {\n      const result = await axios.post('http://localhost:8000/predict/result_model', {\n        conv2d_input: matrixData\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        timeout: 5000\n      });\n      console.log(\"Response data:\", result.data);\n\n      if (result.data && result.data.predicted_class && result.data.probabilities) {\n        const predictions = result.data.probabilities;\n        const predictedClass = result.data.predicted_class;\n        setResponse({ predictedClass, probabilities: predictions });\n      } else {\n        console.log(\"Predictions data is not available.\");\n        setError(\"Prediction data is not available.\");\n      }\n    } catch (error) {\n      console.log(\"Error details:\", error);\n      setError(error.response ? error.response.data : 'An error occurred');\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1>Generate Random Matrix for Prediction</h1>\n        <button type=\"button\" onClick={handleGenerateMatrix}>\n          Generate Random Matrix\n        </button>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {response && (\n        <div>\n          <p>Predicted Class: {response.predictedClass}</p>\n          <p>Probabilities: {JSON.stringify(response.probabilities)}</p>\n        </div>\n      )}\n      {error && <div>Error: {JSON.stringify(error)}</div>}\n    </div>\n  );\n};\n\nexport default ResultPredictForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}