{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from '../context/UserContext'; // Import UserContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [userpassword, setUserpassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    setUser\n  } = useUser(); // setUser fonksiyonunu kullanıyoruz\n\n  const submitLogin = async () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        userpassword\n      })\n    };\n    try {\n      const response = await fetch(\"http://localhost:8080/users/login\", requestOptions);\n      const data = await response.json();\n      if (!response.ok) {\n        setErrorMessage(\"Login failed. Please try again.\");\n      } else {\n        setUser({\n          id: data.id,\n          username: data.username\n        }); // Kullanıcı bilgilerini ayarla\n        props.setIsLoggedIn(true);\n        navigate('/');\n      }\n    } catch (error) {\n      console.error(\"Network error:\", error);\n      setErrorMessage(\"Network error. Please try again later.\");\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    submitLogin();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"bg-white shadow-md rounded-lg p-8\",\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"0Wxfd05fB1SifhHslStq4qW8gx4=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useUser","jsxDEV","_jsxDEV","Login","props","_s","username","setUsername","userpassword","setUserpassword","errorMessage","setErrorMessage","navigate","setUser","submitLogin","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","ok","id","setIsLoggedIn","error","console","handleSubmit","e","preventDefault","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from '../context/UserContext'; // Import UserContext\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [userpassword, setUserpassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const { setUser } = useUser(); // setUser fonksiyonunu kullanıyoruz\n\n  const submitLogin = async () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ username, userpassword }),\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:8080/users/login\", requestOptions);\n      const data = await response.json();\n\n      if (!response.ok) {\n        setErrorMessage(\"Login failed. Please try again.\");\n      } else {\n        setUser({ id: data.id, username: data.username }); // Kullanıcı bilgilerini ayarla\n        props.setIsLoggedIn(true);\n        navigate('/');\n      }\n    } catch (error) {\n      console.error(\"Network error:\", error);\n      setErrorMessage(\"Network error. Please try again later.\");\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    submitLogin();\n  };\n\n  return (\n    <div className=\"flex justify-center items-center min-h-screen\">\n      <form className=\"bg-white shadow-md rounded-lg p-8\" onSubmit={handleSubmit}>\n        {/* Form */}\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEc;EAAQ,CAAC,GAAGb,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE/B,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,cAAc,GAAG;MACrBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,QAAQ;QAAEE;MAAa,CAAC;IACjD,CAAC;IAED,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAEP,cAAc,CAAC;MACjF,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChBd,eAAe,CAAC,iCAAiC,CAAC;MACpD,CAAC,MAAM;QACLE,OAAO,CAAC;UAAEa,EAAE,EAAEH,IAAI,CAACG,EAAE;UAAEpB,QAAQ,EAAEiB,IAAI,CAACjB;QAAS,CAAC,CAAC,CAAC,CAAC;QACnDF,KAAK,CAACuB,aAAa,CAAC,IAAI,CAAC;QACzBf,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCjB,eAAe,CAAC,wCAAwC,CAAC;IAC3D;EACF,CAAC;EAED,MAAMmB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBlB,WAAW,CAAC,CAAC;EACf,CAAC;EAED,oBACEZ,OAAA;IAAK+B,SAAS,EAAC,+CAA+C;IAAAC,QAAA,eAC5DhC,OAAA;MAAM+B,SAAS,EAAC,mCAAmC;MAACE,QAAQ,EAAEL;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAClC,EAAA,CA3CIF,KAAK;EAAA,QAIQJ,WAAW,EACRC,OAAO;AAAA;AAAAwC,EAAA,GALvBrC,KAAK;AA6CX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}