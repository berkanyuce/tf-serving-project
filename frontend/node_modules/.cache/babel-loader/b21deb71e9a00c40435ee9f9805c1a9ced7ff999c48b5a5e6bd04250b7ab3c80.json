{"ast":null,"code":"var _jsxFileName = \"/app/src/components/IrisPredictForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IrisPredictForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    dense_2_input: [0, 0, 0, 0]\n  });\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const handleChange = (e, index) => {\n    const {\n      value\n    } = e.target;\n    const updatedValues = [...formData.dense_2_input]; // direk formData'dan al\n    updatedValues[index] = parseFloat(value);\n    setFormData({\n      ...formData,\n      dense_2_input: updatedValues\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const result = await axios.post('http://localhost:8000/predict/iris_model', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (result.data && result.data.predicted_class && result.data.probabilities) {\n        const predictions = result.data.probabilities;\n        const predictedClass = result.data.predicted_class;\n        setResponse({\n          predictedClass,\n          probabilities: predictions\n        });\n      } else {\n        setError(\"Prediction data is not available.\");\n      }\n    } catch (error) {\n      setError(error.response ? error.response.data : 'An error occurred');\n    }\n  };\n  const inputLabels = [\"Sepal Length\", \"Sepal Width\", \"Petal Length\", \"Petal Width\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [formData.dense_2_input.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"my-auto text-l font-medium text-black\",\n              children: [inputLabels[index], \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: value,\n              className: \"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 \",\n              placeholder: value,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center my-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center \",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold text-center\",\n            children: [\"Predicted Class: \", response.predictedClass]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error: \", JSON.stringify(error)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(IrisPredictForm, \"jmKppuUZ3N0O2wIHGaY1hMKjk3s=\");\n_c = IrisPredictForm;\nexport default IrisPredictForm;\nvar _c;\n$RefreshReg$(_c, \"IrisPredictForm\");","map":{"version":3,"names":["React","useState","axios","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","IrisPredictForm","_s","formData","setFormData","dense_2_input","response","setResponse","error","setError","handleChange","e","index","value","target","updatedValues","parseFloat","handleSubmit","event","preventDefault","result","post","headers","data","predicted_class","probabilities","predictions","predictedClass","inputLabels","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","map","type","id","placeholder","required","JSON","stringify","_c","$RefreshReg$"],"sources":["/app/src/components/IrisPredictForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Header from './Header';\n\nconst IrisPredictForm = () => {\n  const [formData, setFormData] = useState({\n    dense_2_input: [0, 0, 0, 0],\n  });\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleChange = (e, index) => {\n    const { value } = e.target;\n    const updatedValues = [...formData.dense_2_input]; // direk formData'dan al\n    updatedValues[index] = parseFloat(value);\n    setFormData({ ...formData, dense_2_input: updatedValues });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const result = await axios.post('http://localhost:8000/predict/iris_model', formData, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (result.data && result.data.predicted_class && result.data.probabilities) {\n        const predictions = result.data.probabilities;\n        const predictedClass = result.data.predicted_class;\n        setResponse({ predictedClass, probabilities: predictions });\n      } else {\n        setError(\"Prediction data is not available.\");\n      }\n    } catch (error) {\n      setError(error.response ? error.response.data : 'An error occurred');\n    }\n  };\n\n  const inputLabels = [\"Sepal Length\", \"Sepal Width\", \"Petal Length\", \"Petal Width\"];\n\n  return (\n    <>\n      <Header /> {/* Header bile≈üenini buraya ekleyin */}\n      <div className='flex justify-center '>\n        <div className='flex justify-center flex-col'>\n          <form onSubmit={handleSubmit}>\n                {formData.dense_2_input.map((value, index) => (\n                    <div className='flex justify-between' key={index}>\n                        <label className=\"my-auto text-l font-medium text-black\">{inputLabels[index]}:</label>\n                        <input type=\"number\" id={value} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 \" placeholder={value} required />\n                    </div>\n                ))}\n                <div className='flex justify-center my-4'>\n                  <button type=\"submit\" className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center \">Submit</button>\n                </div>\n          </form>\n          {response && (\n            <div>\n              <p className=\"font-bold text-center\">Predicted Class: {response.predictedClass}</p>\n            </div>\n          )}\n          {error && <div>Error: {JSON.stringify(error)}</div>}\n        </div>\n      </div>\n    </> \n  );\n};\n\nexport default IrisPredictForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}