{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Cifar10PredictForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n// Utility function to convert image to a 32x32x3 matrix\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst processImage = async file => {\n  const img = new Image();\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onload = () => {\n      img.src = reader.result;\n    };\n    img.onload = () => {\n      canvas.width = 32;\n      canvas.height = 32;\n      ctx.drawImage(img, 0, 0, 32, 32);\n      const imageData = ctx.getImageData(0, 0, 32, 32);\n      const data = imageData.data;\n      const matrix = [];\n      for (let i = 0; i < 32; i++) {\n        const row = [];\n        for (let j = 0; j < 32; j++) {\n          const index = (i * 32 + j) * 4;\n          const r = data[index] / 255;\n          const g = data[index + 1] / 255;\n          const b = data[index + 2] / 255;\n          row.push([r, g, b]); // RGB values\n        }\n        matrix.push(row);\n      }\n      resolve(matrix);\n    };\n    img.onerror = err => reject(err);\n    reader.readAsDataURL(file);\n  });\n};\nconst ResultPredictForm = () => {\n  _s();\n  const [imageData, setImageData] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null); // New state for image preview\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const handleImageChange = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      try {\n        const imgData = await processImage(file);\n        setImageData(imgData);\n\n        // Create a preview URL and set it to state\n        const previewURL = URL.createObjectURL(file);\n        setImagePreview(previewURL);\n      } catch (err) {\n        setError(\"Failed to process image\");\n      }\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!imageData) {\n      setError(\"No image data available\");\n      return;\n    }\n    try {\n      const result = await axios.post('http://localhost:8000/predict/cifar10_model', {\n        conv2d_input: imageData\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        timeout: 5000\n      });\n      if (result.data && result.data.predicted_class) {\n        const predictedClass = result.data.predicted_class;\n        setResponse({\n          predictedClass: predictedClass\n        });\n      } else {\n        console.log(\"Predictions data is not available.\");\n        setError(\"Prediction data is not available.\");\n      }\n    } catch (error) {\n      console.log(\"Error details:\", error);\n      setError(error.response ? error.response.data : 'An error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center flex-col w-1/2\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex flex-col\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"flex justify-center mb-2 text-l font-medium text-gray-900\",\n          for: \"file_input\",\n          children: \"Upload Image for Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          class: \" flex justify-center text-gray-400 font-semibold text-sm bg-white border file:cursor-pointer cursor-pointer file:border-0 file:py-3 file:px-4 file:mr-4 file:bg-gray-100 file:hover:bg-gray-200 file:text-gray-500 rounded\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center my-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            class: \"text-white bg-green-700 hover:bg-green-800 focus:outline-none focus:ring-4 focus:ring-green-300 font-medium rounded-full text-sm px-5 py-2.5 text-center me-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold text-center py-4\",\n          children: \"Image Preview:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePreview,\n          alt: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-center py-4\",\n          children: [\"Predicted Class: \", response.predictedClass]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", JSON.stringify(error)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultPredictForm, \"qYc8I0xrnYIgLfDhWHSmP4HHp5c=\");\n_c = ResultPredictForm;\nexport default ResultPredictForm;\nvar _c;\n$RefreshReg$(_c, \"ResultPredictForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","processImage","file","img","Image","canvas","document","createElement","ctx","getContext","reader","FileReader","Promise","resolve","reject","onload","src","result","width","height","drawImage","imageData","getImageData","data","matrix","i","row","j","index","r","g","b","push","onerror","err","readAsDataURL","ResultPredictForm","_s","setImageData","imagePreview","setImagePreview","response","setResponse","error","setError","handleImageChange","e","target","files","imgData","previewURL","URL","createObjectURL","handleSubmit","event","preventDefault","post","conv2d_input","headers","timeout","predicted_class","predictedClass","console","log","className","children","onSubmit","class","for","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","alt","JSON","stringify","_c","$RefreshReg$"],"sources":["/app/src/components/Cifar10PredictForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\n// Utility function to convert image to a 32x32x3 matrix\nconst processImage = async (file) => {\n  const img = new Image();\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  const reader = new FileReader();\n\n  return new Promise((resolve, reject) => {\n    reader.onload = () => {\n      img.src = reader.result;\n    };\n\n    img.onload = () => {\n      canvas.width = 32;\n      canvas.height = 32;\n      ctx.drawImage(img, 0, 0, 32, 32);\n\n      const imageData = ctx.getImageData(0, 0, 32, 32);\n      const data = imageData.data;\n      const matrix = [];\n\n      for (let i = 0; i < 32; i++) {\n        const row = [];\n        for (let j = 0; j < 32; j++) {\n          const index = (i * 32 + j) * 4;\n          const r = data[index] / 255;\n          const g = data[index + 1] / 255;\n          const b = data[index + 2] / 255;\n          row.push([r, g, b]); // RGB values\n        }\n        matrix.push(row);\n      }\n\n      resolve(matrix);\n    };\n\n    img.onerror = (err) => reject(err);\n    reader.readAsDataURL(file);\n  });\n};\n\nconst ResultPredictForm = () => {\n  const [imageData, setImageData] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null); // New state for image preview\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleImageChange = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      try {\n        const imgData = await processImage(file);\n        setImageData(imgData);\n\n        // Create a preview URL and set it to state\n        const previewURL = URL.createObjectURL(file);\n        setImagePreview(previewURL);\n      } catch (err) {\n        setError(\"Failed to process image\");\n      }\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!imageData) {\n      setError(\"No image data available\");\n      return;\n    }\n\n    try {\n      const result = await axios.post('http://localhost:8000/predict/cifar10_model', {\n        conv2d_input: imageData\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        timeout: 5000\n      });\n\n      if (result.data && result.data.predicted_class) {\n        const predictedClass = result.data.predicted_class;\n        setResponse({ predictedClass: predictedClass });\n      } else {\n        console.log(\"Predictions data is not available.\");\n        setError(\"Prediction data is not available.\");\n      }\n    } catch (error) {\n      console.log(\"Error details:\", error);\n      setError(error.response ? error.response.data : 'An error occurred');\n    }\n  };\n\n  return (\n    <div className='flex justify-center'>\n      <div className='flex justify-center flex-col w-1/2'>\n        <form className='flex flex-col' onSubmit={handleSubmit}>\n          <label class=\"flex justify-center mb-2 text-l font-medium text-gray-900\" for=\"file_input\">Upload Image for Prediction</label>\n          <input type=\"file\" accept=\"image/*\" class=\" flex justify-center text-gray-400 font-semibold text-sm bg-white border file:cursor-pointer cursor-pointer file:border-0 file:py-3 file:px-4 file:mr-4 file:bg-gray-100 file:hover:bg-gray-200 file:text-gray-500 rounded\" onChange={handleImageChange} />   \n          <div className='flex justify-center my-4'>\n            <button type=\"submit\" class=\"text-white bg-green-700 hover:bg-green-800 focus:outline-none focus:ring-4 focus:ring-green-300 font-medium rounded-full text-sm px-5 py-2.5 text-center me-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\">Submit</button>\n          </div>\n        </form>\n        {imagePreview && (\n          <div className='flex justify-center flex-col'>\n            <h2 className='font-bold text-center py-4'>Image Preview:</h2>\n            <img src={imagePreview} alt=\"Preview\" />\n          </div>\n        )}\n        {response && (\n          <div>\n            <h1 className='font-bold text-center py-4'>Predicted Class: {response.predictedClass}</h1>\n          </div>\n        )}\n        {error && <div>Error: {JSON.stringify(error)}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default ResultPredictForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}