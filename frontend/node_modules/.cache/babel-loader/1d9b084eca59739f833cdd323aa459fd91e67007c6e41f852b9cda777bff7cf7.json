{"ast":null,"code":"var _jsxFileName = \"/app/src/contexts/UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n  const [predictions, setPredictions] = useState([]);\n  const fetchPredictions = async userId => {\n    try {\n      const response = await fetch(`http://localhost:8081/predictions?user_id=${userId}`);\n      const data = await response.json();\n      setPredictions(data);\n    } catch (error) {\n      console.error(\"Failed to fetch predictions:\", error);\n    }\n  };\n  const login = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n    fetchPredictions(userData.id);\n  };\n  const logout = () => {\n    setUser(null);\n    setPredictions([]);\n    localStorage.removeItem('user');\n  };\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      const parsedUser = JSON.parse(savedUser);\n      setUser(parsedUser);\n      fetchPredictions(parsedUser.id);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      predictions,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"zxkyNCAqyT7EdILBSykvceBgTYE=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","savedUser","localStorage","getItem","JSON","parse","predictions","setPredictions","fetchPredictions","userId","response","fetch","data","json","error","console","login","userData","setItem","stringify","id","logout","removeItem","parsedUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","$RefreshReg$"],"sources":["/app/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(() => {\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n\n  const [predictions, setPredictions] = useState([]);\n\n  const fetchPredictions = async (userId) => {\n    try {\n      const response = await fetch(`http://localhost:8081/predictions?user_id=${userId}`);\n      const data = await response.json();\n      setPredictions(data);\n    } catch (error) {\n      console.error(\"Failed to fetch predictions:\", error);\n    }\n  };\n\n  const login = (userData) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n    fetchPredictions(userData.id);\n  };\n\n  const logout = () => {\n    setUser(null);\n    setPredictions([]);\n    localStorage.removeItem('user');\n  };\n\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      const parsedUser = JSON.parse(savedUser);\n      setUser(parsedUser);\n      fetchPredictions(parsedUser.id);\n    }\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ user, predictions, login, logout }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUser = () => {\n  return useContext(UserContext);\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACrC,MAAMU,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,IAAI;EACjD,CAAC,CAAC;EAEF,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMiB,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6CF,MAAM,EAAE,CAAC;MACnF,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCN,cAAc,CAACK,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAME,KAAK,GAAIC,QAAQ,IAAK;IAC1BjB,OAAO,CAACiB,QAAQ,CAAC;IACjBf,YAAY,CAACgB,OAAO,CAAC,MAAM,EAAEd,IAAI,CAACe,SAAS,CAACF,QAAQ,CAAC,CAAC;IACtDT,gBAAgB,CAACS,QAAQ,CAACG,EAAE,CAAC;EAC/B,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBrB,OAAO,CAAC,IAAI,CAAC;IACbO,cAAc,CAAC,EAAE,CAAC;IAClBL,YAAY,CAACoB,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED9B,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACb,MAAMsB,UAAU,GAAGnB,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC;MACxCD,OAAO,CAACuB,UAAU,CAAC;MACnBf,gBAAgB,CAACe,UAAU,CAACH,EAAE,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE1B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,IAAI;MAAEO,WAAW;MAAEU,KAAK;MAAEK;IAAO,CAAE;IAAAxB,QAAA,EAC/DA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,EAAA,CA5CWF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AA8CzB,OAAO,MAAMmC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAO1C,UAAU,CAACK,WAAW,CAAC;AAChC,CAAC;AAACqC,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}